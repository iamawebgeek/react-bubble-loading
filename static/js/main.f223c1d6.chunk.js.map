{"version":3,"sources":["../../src/Bubble.tsx","../../src/useBubbles.ts","../../src/getAnimatedBubbleCreator.ts","../../src/BubbleLoading.tsx","App.tsx","index.tsx"],"names":["Bubble","animate","color","coordinate","duration","size","fullDuration","delayRef","React","Math","motion","style","width","height","position","borderRadius","backgroundColor","transition","delay","current","x","y","opacity","scale","useBubbles","maxBubbles","interval","bubbleSize","areaSize","createBubble","paddingSize","edge","random","side","negate","which","num","key","index","getAnimatedBubbleCreator","tickRef","Array","offset","bubbles","setBubbles","isBubbleFadedOut","setInterval","currentBubbles","BubbleLoading","bubbleColor","display","alignItems","justifyContent","App","ReactDOM","render","document","getElementById"],"mappings":"0MAcaA,EAAgC,SAAC,G,IAC5CC,YACAC,UACAC,eACAC,aACAC,SAEMC,EAAeF,EAArB,IACMG,EAAWC,iBAAcF,EAAD,EAAqBG,KAAnD,UACA,OACE,wBAACC,IAAD,KACEC,MAAO,CACLC,MADK,EAELC,OAFK,EAGLC,SAHK,WAILC,aAJK,MAKLC,gBAAiBd,GAEnBe,WAAY,CACVb,SAAUE,EAAeC,EADf,QAEVW,MAAOX,EAASY,SAElBlB,QACEA,EACI,CACEmB,EAAG,CAAC,EAAGjB,EADT,GAEEkB,EAAG,CAAC,EAAGlB,EAFT,GAGEmB,QAAS,CAAC,EAHZ,GAIEC,MAAO,CAAC,EAAG,MAEb,M,mNChCCC,EAAa,SAAC,G,IAAEC,eAAYC,aAAUC,eAAYC,aACvDC,EAAe,mBACnB,kBCRoC,SAAC,G,IAAED,aAAUD,eAAYD,aACzDI,EAAcF,EAApB,IAA+BD,EACzBI,EAAOD,EAAb,EACA,OAAO,YACL,IAAME,EAASvB,WAAWA,cAA1B,GACMN,EAAa,CAAEiB,EAAF,EAAWC,EAAGU,GAC3BE,EAAOxB,qBAAb,IACAN,OACA,IAAM+B,EAAS,SAACC,EAAD,GACb,OAAIF,IAAJ,EACS,EAAP,EAEKG,EAAP,GAEIC,EAAM5B,KAAZ,SACML,EAAWsB,EAAWjB,WAAXiB,EAAsBW,GAAvC,KACA,OAAQC,EAAR,GACE,OACEnC,IAAe+B,EAAO,IAAK/B,EAA3BA,GACF,OACEA,IAAe+B,EAAO,IAAK/B,EAA3BA,GACA,MACF,OACEA,IAAe+B,EAAO,IAAK/B,EAA3BA,GAGJ,MAAO,CACLA,WADK,EAELC,SAFK,EAGLiC,QDrBIE,CAAyB,CAAEX,SAAF,EAAYD,WAAZ,EAAwBD,eACvD,CAACA,EAAUC,EAFb,IAIMa,EAAUhC,iBAAhB,G,EAC8B,mBAC5BiC,MAAA,gBAA8B,0BAAoBZ,EAApB,IAAyCa,OAAQ,QAD1EC,OAASC,OAoBhB,OAjBApC,qBAAgB,WACd,IAAMqC,EAAmB,SAAC,GAAD,6BAA6DL,EAA7D,SACzBM,aAAY,WACVN,aACAI,GAAW,YAET,OAD2BG,OAA3B,GAESA,EAAA,KAAmB,qBACxBF,EAAA,QACShB,EADT,IAC8Ba,OAAQF,EAAQrB,UAFtB,KAM5B,OAXJ2B,KAFFtC,IAiBA,GE1BWwC,EAA8C,SAAC,G,IAC1DpB,a,IACAqB,uBAAcA,EAAA,Y,IACdtB,sBAAaA,EAAA,K,IACbF,WAEMkB,EAAUnB,EAAW,CACzBI,SADyB,EAEzBD,WAFyB,EAGzBF,gBALFA,IAAaA,EAAA,KAMXC,SAAU,MAEZ,OACE,+BACEf,MAAO,CACLuC,QADK,OAELC,WAFK,SAGLC,eAHK,SAILxC,MAJK,EAKLC,OAAQe,IAGTe,EAAA,KAAY,mBACXnC,yCACEP,SAAS,EACTC,MAAO+C,EACP5C,KAAMsB,GAJG,OAQb,2BACE1B,SAAS,EACTC,MAAO+C,EACP9C,WAAY,CAAEiB,EAAF,EAAQC,EAAG,GACvBjB,SAAU,EACVC,KAAMsB,MCvCC0B,EAJH,WACV,OAAO,kBAAC,EAAD,CAAezB,SAAU,OCClC0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.f223c1d6.chunk.js","sourcesContent":["import { motion } from 'framer-motion'\nimport * as React from 'react'\n\nexport type BubbleProps = {\n  animate: boolean\n  color: string\n  coordinate: {\n    x: number\n    y: number\n  }\n  duration: number\n  size: number\n}\n\nexport const Bubble: React.FC<BubbleProps> = ({\n  animate,\n  color,\n  coordinate,\n  duration,\n  size,\n}) => {\n  const fullDuration = duration / 1e3\n  const delayRef = React.useRef((fullDuration / 2) * Math.random())\n  return (\n    <motion.div\n      style={{\n        width: size,\n        height: size,\n        position: 'absolute',\n        borderRadius: '50%',\n        backgroundColor: color,\n      }}\n      transition={{\n        duration: fullDuration - delayRef.current,\n        delay: delayRef.current,\n      }}\n      animate={\n        animate\n          ? {\n              x: [0, coordinate.x],\n              y: [0, coordinate.y],\n              opacity: [1, 0],\n              scale: [1, 1.5],\n            }\n          : {}\n      }\n    />\n  )\n}\n","import * as React from 'react'\n\nimport { AnimatedBubbleCreatorOptions, getAnimatedBubbleCreator } from './getAnimatedBubbleCreator'\n\nexport type HookOptions = {\n  maxBubbles: number\n} & AnimatedBubbleCreatorOptions\n\nexport type BubbleState = {\n  offset: number\n} & ReturnType<ReturnType<typeof getAnimatedBubbleCreator>>\n\nexport const useBubbles = ({ maxBubbles, interval, bubbleSize, areaSize }: HookOptions) => {\n  const createBubble = React.useMemo(\n    () => getAnimatedBubbleCreator({ areaSize, bubbleSize, interval }),\n    [interval, bubbleSize, areaSize]\n  )\n  const tickRef = React.useRef(0)\n  const [bubbles, setBubbles] = React.useState<BubbleState[]>(\n    Array(maxBubbles).fill(0).map((_, index) => ({ ...createBubble(index), offset: 0 }))\n  )\n  React.useEffect(() => {\n    const isBubbleFadedOut = ({ offset, duration }: BubbleState) => offset + duration === tickRef.current\n    setInterval(() => {\n      tickRef.current += interval\n      setBubbles((currentBubbles) => {\n        const hasBubblesToSwitch = currentBubbles.some(isBubbleFadedOut)\n        if (hasBubblesToSwitch) {\n          return currentBubbles.map((bubble, index) =>\n            isBubbleFadedOut(bubble)\n              ? { ...createBubble(index), offset: tickRef.current } as BubbleState\n              : bubble\n          )\n        }\n        return currentBubbles\n      })\n    }, interval)\n  }, [])\n  return bubbles\n}\n","export type AnimatedBubbleCreatorOptions = {\n  areaSize: number\n  bubbleSize: number\n  interval: number\n}\n\nexport const getAnimatedBubbleCreator = ({ areaSize, bubbleSize, interval }: AnimatedBubbleCreatorOptions) => {\n  const paddingSize = areaSize - bubbleSize * 1.5\n  const edge = paddingSize / 2\n  return (index: number) => {\n    const random = Math.round(Math.random() * edge)\n    const coordinate = { x: edge, y: edge }\n    const side = Math.random() > 0.5 ? 'x' : 'y'\n    coordinate[side] = random\n    const negate = (which: typeof side, num: number) => {\n      if (side === which) {\n        return 0 - num\n      }\n      return num - paddingSize\n    }\n    const key = Math.random()\n    const duration = interval * Math.round(key * 7) + 1600\n    switch (index % 4) {\n      case 0:\n        coordinate.x = negate('x', coordinate.x)\n      case 1:\n        coordinate.y = negate('y', coordinate.y)\n        break\n      case 2:\n        coordinate.x = negate('x', coordinate.x)\n        break\n    }\n    return {\n      coordinate,\n      duration,\n      key,\n    }\n  }\n}\n","import * as React from 'react'\n\nimport { Bubble } from './Bubble'\nimport { useBubbles } from './useBubbles'\n\nexport type BubbleLoadingProps = {\n  areaSize: number\n  maxBubbles?: number\n  bubbleSize?: number\n  bubbleColor?: string\n}\n\nexport const BubbleLoading: React.FC<BubbleLoadingProps> = ({\n  areaSize,\n  bubbleColor = '#6bcfff',\n  bubbleSize = 50,\n  maxBubbles = 20,\n}) => {\n  const bubbles = useBubbles({\n    areaSize,\n    bubbleSize,\n    maxBubbles,\n    interval: 200,\n  })\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: areaSize,\n        height: areaSize,\n      }}\n    >\n      {bubbles.map((props) => (\n        <Bubble\n          animate={true}\n          color={bubbleColor}\n          size={bubbleSize}\n          {...props}\n        />\n      ))}\n      <Bubble\n        animate={false}\n        color={bubbleColor}\n        coordinate={{ x: 0, y: 0 }}\n        duration={0}\n        size={bubbleSize}\n      />\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { BubbleLoading } from 'react-bubble-loading'\n\nconst App = () => {\n  return <BubbleLoading areaSize={500} />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}